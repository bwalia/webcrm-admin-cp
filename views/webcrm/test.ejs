<% include include/main-header %>
<link href='css/fullcalendar/fullcalendar.min.css' rel='stylesheet' />
<link href='css/fullcalendar/fullcalendar.print.css' rel='stylesheet' media='print' />
<link href='css/fullcalendar/scheduler.min.css' rel='stylesheet' />
<script src='js/moment.min.js'></script>
<style>
.wrap {
	width:100%;
   
}

.wrap table {
      table-layout: fixed;
}

table tr td {
    padding: 5px;
   
    word-wrap: break-word;
}

table.head tr td {
    background: #eee;
}

.inner_table {
    height: 400px;
    overflow-y: auto;
}
</style>
</head>
<body class="hold-transition skin-blue sidebar-mini">
<div class="wrapper">
	<!-- Header Starts here-->
  		<% include include/header %>
  	<!-- Header Ends here-->
  		
  	<!-- Sidebar Starts Here-->
  		<% include include/sidebar %>

  	<!-- Content Wrapper. Contains page content -->
	<div class="content-wrapper">
    	<!-- Content Header (Page header) -->
    	<section class="content-header">
      		<h1>Calendar</h1>
      		<ol class="breadcrumb">
        		<li><a href="<%= backendDirectory %>/index"><i class="fa fa-dashboard"></i> Home</a></li>
        		<li class="active">Calendar</li>
      		</ol>
    	</section>	

    	<!-- Main content -->
    	<section class="content">
    		<div class="row">
    			<form action="<%= backendDirectory %>/upload" enctype="multipart/form-data" method="post">
      <input type="text" name="title">
      <input type="file" name="file">
        <input type="submit" value="Upload">
    </form>

    		</div>
     		<!--<div class="row">
     			<button type="button" onClick="send_request();" class="btn btn-flat" style="border-left:none;line-height: 12px;">SEND REUQUEST</button>
        		<div class="col-md-3">
          			<div class="sidebar-form" STYLE="margin: 0px 0px 10px 0px;">
        				<div class="input-group">
          					<input id="search" class="form-control" placeholder="Search..." type="text">
              				<span class="input-group-btn">
                				<button type="submit" id="searchBtn" class="btn btn-flat" style="border-left:none;line-height: 12px;"><i class="fa fa-search"></i></button>
             				</span>
        				</div>
      				</div>
           				<div class="table-responsive table-full-width">
		 					<div class="table-responsive">
		 						<div class="wrap">
     								<table class="table table-striped  table-bordered table-hover custom-tbl-st" id="table-breakpoint" style="background-color: rgb(255, 255, 255); border-radius: 4px; margin-bottom:0px;">
        								<thead>
                                        	<tr>
                                            	<th>Project</th>
                                            	<th>Task</th>
                                            	<th>Est. Hours</th>
                                        	</tr>
                                    	</thead>
									</table>
    								<div class="inner_table">
										<table class="table table-striped  table-bordered table-hover custom-tbl-st" id="table-breakpoint" style="background-color: rgb(255, 255, 255); border-radius: 4px;">
       										<tbody id="tasks_table_body">
                                
                               				</tbody>
                            			</table>
									</div>
								</div>
							</div>
		 				</div>
            			<!-- /.box-body -->
          			
         		</div>
        		<!-- /.col -->
        		<div class="col-md-9">
          			<div class="box box-primary">
           				<div class="box-body no-padding">
              				<!-- THE CALENDAR -->
              				<div id="calendar"></div>
            			</div>
            			<!-- /.box-body -->
          			</div>
          			<!-- /. box -->
        		</div>
       		 <!-- /.col -->
      		</div>-->
      		<!-- /.row -->
   		</section>
    	<!-- /.content -->
	</div>
  
  <!-- /.content-wrapper -->
  
  <!-- Footer Starts Here-->
	<% include include/footer %>
	<!-- Footer Ends Here-->
</div>
<!-- Page-Level Plugin Scripts-->
<script src='js/jquery-ui.min.js'></script>
<script src='js/fullcalendar.min.js'></script>
<script src='js/scheduler.min.js'></script>
<script>
var resourcesFromJSON = [];
var eventIdDropped = "", displayScope=true;
var displayDate = new Date(); 
var schedulerFrom=1479686400000, schedulerTo=1480291200000;
var calendarEntriesFromJSON = [];

function GetUsers(){
	var jsonRow=backendDirectory+"/api_fetch_list?start=0&limit=1000&collection=users";
		
	$.getJSON(jsonRow,function(html){
		if(html.aaData.length>0){
			$.each(html.aaData, function(i,data){
				var titileStr=data.firstname;
				if(data.lastname){
					titileStr+=" "+data.lastname;
				}
				resourcesFromJSON.push(
					{ id: data._id, title: titileStr }
				);
				
			});
			GetCalendarEntries();
    	}
    	//SetupFullCalendar();
	});
}

	/* initialize the external events
     -----------------------------------------------------------------*/
    function ini_events(ele) {
      ele.each(function () {
      	
      	// store data so the calendar knows to render an event upon drop
		$(this).data('event', {
			title: $.trim($(this).text()), // use the element's text as the event title
			stick: true // maintain when user navigates (see docs on the renderEvent method)
		});

        // make the event draggable using jQuery UI
        $(this).draggable({
          	zIndex: 1070,
          	revert: "invalid" ,
          	cursor: "move",
            cursorAt: { top: 16, left: 26 },
			helper: function(){
				$copy = $(this).clone();
				
                $copy = $copy.get(0).firstElementChild.innerHTML;
                return $( "<div style='background: #489ca1; color: #fff; font-weight: bold; border-radius:4px;padding:5px;'>"+$copy+"</div>" );
			},
			appendTo: 'body',
			scroll: false
        });

      });
    }

function GetCalendarEntries(){
	var jsonRow=backendDirectory+"/task_scheduler?schedulerFrom="+schedulerFrom+"&schedulerTo="+schedulerTo+"&collection=calendar-events";
	$.getJSON(jsonRow,function(theResponse){
		if(theResponse.aaData.length>0){
			calendarEntriesFromJSON = [];
			$.each(theResponse.aaData, function (key, data) {
				calendarEntriesFromJSON.push(
					{
						id: data._id,
						resourceId: data.employee_id,
						end: moment.unix(data.timestamp_end/1000).format("YYYY-MM-DDTHH:mm:ss"),
						start: moment.unix(data.timestamp_start/1000).format("YYYY-MM-DDTHH:mm:ss"),
						title : data.title,
						description :data.description,
						reporter : data.reported_by
					}
				);
			});
		}
		SetupFullCalendar();
	});
}
 
function SetupFullCalendar(){
	//console.log(calendarEntriesFromJSON);
	/* initialize the calendar
     -----------------------------------------------------------------*/
    //Date for the calendar events (dummy data)
    var date = new Date();
    var d = date.getDate(),
        m = date.getMonth(),
        y = date.getFullYear();
        
    $('#calendar').fullCalendar({
    		timezone: 'local',
			now: displayDate.toISOString().substring(0, 10),
			firstDay: 1,
			editable: true, // enable draggable events
			droppable: true, // this allows things to be dropped onto the calendar
			minTime: "10:00:00", // start working hours 10 AM
  			//maxTime: "17:00:00", // end working hours 5 PM
			scrollTime: '00:00', // undo default 6am scrollTime
			height: 450,
			forceEventDuration : true,
			customButtons: {
				refreshButton: {
					text: 'Refresh',
					click: function() {
						GetCalendarEntries();
					}
				},
				trashButton: {
					text: 'Delete',
					click: function() {
						alert('Drag a calendar event on to this icon to delete it.');
					}
				}
			},
			header: {
				left: 'timelineWeek,timelineDay datePickerButton today prev,next',
				center: 'title',
				right: 'refreshButton trashButton'
			},
			defaultView: 'timelineWeek',
			views: {
				timelineWeek: {
					type: 'timeline',
					duration: { days: 7 }
				},
				agendaToDisplayOneWeek: {
                	type: 'timeline',
                	duration: { weeks: 1 }
        		},
            	agendaToDisplayTwoWeek: {
                	type: 'timeline',
                	duration: { weeks: 2 }
        		},
        		agendaToDisplayThreeWeek: {
               		type: 'timeline',
                	duration: { weeks: 3 }
        		},
        		agendaToDisplayFourWeek: {
                	type: 'timeline',
                	duration: { weeks: 4 }
        		},
            	agendaToDisplayFiveWeek: {
                	type: 'timeline',
                	duration: { weeks: 5 }
        		}
			},
			viewRender: function(view) {
				//console.log(view.name);
				schedulerFrom=view.start;
				schedulerTo=view.end;
				GetCalendarEntries();
				
				$('.fc-scope').hide();
            	$('.fc-timelineWeek-button').removeClass( 'fc-state-active' );
            
    			if(view.name=="timelineWeek" || view.name=="agendaToDisplayOneWeek" || view.name=="agendaToDisplayTwoWeek" || view.name=="agendaToDisplayThreeWeek" ||   view.name=="agendaToDisplayFourWeek" || view.name=="agendaToDisplayFiveWeek"){
    				if(view.name=="timelineWeek"){
                   	 $('#no_of_weeks').val(1);
                	}
                	$('.fc-scope').show();
                	$('.fc-timelineWeek-button').addClass( 'fc-state-active' );
                }
			},
			resourceLabelText: 'Person',
			resources: resourcesFromJSON,
			events: calendarEntriesFromJSON,
			drop: function(date, jsEvent, ui, resourceId) {
				
				eventIdDropped = ((this && this.id)? this.id : null);
				
				if(eventIdDropped != null && eventIdDropped !== "")
					eventIdDropped = eventIdDropped.split('|')[1];
					
			},
			eventReceive: function(event) { // called when a proper external event is dropped
				if(eventIdDropped != null) {
					var newEndDateStr;
					if(event.end != null) {	var newEndDateStr=event.end; }
					
					$.ajax({
						url: backendDirectory+'/save_task_scheduler?action=create&task_id='+eventIdDropped+'&datetimestart='+event.start+'&datetimeend='+ newEndDateStr + '&emp_id=' + event.resourceId,
						type: "GET",
						dataType: "json",
						success: function(result) {
					 		if(result.success && result.success === "OK"){
					 			var contentStr=result.aaData[0];
					 			event.id=contentStr._id;
					 			event.title=contentStr.title;
					 			event.timestamp_start=contentStr.timestamp_start;
					 			event.timestamp_end=contentStr.timestamp_end;
					 			event.description=contentStr.description;
					 			event.reporter=contentStr.reported_by;
					 			
					 			$('#calendar').fullCalendar( 'refetchEvents' ); 
					 			
                        		alert("Added succsesfully");
							}	else if ( result.errormessage != "" ) {
								alert( result.errormessage );
							}
						}
					});
				}
			},
			eventDrop: function(event) { // called when an event (already on the calendar) is moved
				if(event.end != null) {	var newEndDateStr=event.end;
					} else { var newEndDateStr=event.start;	 }
					//console.log(event);
					$.ajax({
						url: backendDirectory+'/save_task_scheduler?action=update&timeslip_id='+event.id+'&datetimestart='+event.start+'&datetimeend='+ newEndDateStr + '&emp_id=' + event.resourceId,
						type: "GET",
						dataType: "json",
						success: function(result) {
					 		if(result.success && result.success === "OK"){
					 			$('#calendar').fullCalendar( 'rerenderEvents' );
					 			alert("Updated succsesfully");
							}	else if ( result.errormessage != "" ) {
								alert( result.errormessage );
							}
						}
					});
			},
			eventResize: function(event) { // called when an event (already on the calendar) is moved
				//console.log(event);
				if(event.end != null) {	var newEndDateStr=event.end;
					} else { var newEndDateStr=event.start;	 }
					
					$.ajax({
						url: backendDirectory+'/save_task_scheduler?action=update&timeslip_id='+event.id+'&datetimestart='+event.start+'&datetimeend='+ newEndDateStr + '&emp_id=' + event.resourceId,
						type: "GET",
						dataType: "json",
						success: function(result) {
					 		if(result.success && result.success === "OK"){
					 			$('#calendar').fullCalendar( 'rerenderEvents' );
					 			alert("Updated succsesfully");
							}	else if ( result.errormessage != "" ) {
								alert( result.errormessage );
							}
						}
					});
			},
			eventMouseover: function(event, jsEvent, view) {
				if(event.title != null) {
				
                var startTimeStr=event.start.format();
                var endTimeStr="";
                if(event.end!=null){
                    endTimeStr=event.end.format();
                }
                var content =
					"Task phase: " + event.title + "<br />" +
					"Reporter: " + event.reporter + "<br />" +
					"Task desc: " + event.description + "<br />" +
					"Start time: " + startTimeStr + "<br />" +
					"End time: " + endTimeStr + "<br />";
					
				var tooltip = '<div class="toolTip" style="position:absolute;background-color:#333;border-radius:4px;color:#fff;padding:7px;z-index:1000;font-size:13px;">' + content + '</div>';
					$("body").append(tooltip);
					$(this).mouseover(function (e) {
						$(this).css('z-index', 10000);
						$('.toolTip').fadeIn('500');
						$('.toolTip').fadeTo('10', 1.9);
					}).mousemove(function (e) {
						$('.toolTip').css('top', e.pageY + 10);
						$('.toolTip').css('left', e.pageX + 20);
					});
			}
		},
		eventMouseout: function(event, jsEvent, view) {
			$(this).css('z-index', 8000);
			$('.toolTip').remove();
		},
		eventDragStop: function(event,jsEvent) {
			var trashOffset = $('.fc-trashButton-button').offset();
			var trashLeft = trashOffset.left - 8;
			var trashTop = trashOffset.top - 8;
			var trashWidth = $('.fc-trashButton-button').width() + 16;
			var trashHeight = $('.fc-trashButton-button').height() + 16;	
			
			if( (trashOffset.left <= jsEvent.pageX) & (jsEvent.pageX <= (trashOffset.left + trashWidth)) & (trashOffset.top <= jsEvent.pageY) & (jsEvent.pageY <= (trashOffset.top + trashHeight))){
			  	$.ajax({
					url: backendDirectory+'/save_task_scheduler?action=delete&timeslip_id='+event.id,
					type: 'GET',// DELETE
					dataType: "json",
					success: function(result) {
						if(result.success && result.success === "OK"){
							$('#calendar').fullCalendar('removeEvents',event._id);
                        }else if ( result.errormessage != "" ) {
							alert( result.errormessage );
						}
					}
				});			
			}
		},
		
		});
    $(".fc-license-message").hide();
    
    if(displayScope){
     // Draw Week Selection dropdown on Calendar   
    $('<select id="no_of_weeks" name="no_of_weeks" class="form-control fc-scope" style="width: 21%;height:30px;font-size:12px;"><option value="">--Select--</option><option value="1" selected>1 week</option><option value="2">2 weeks</option><option value="3">3 weeks</option><option value="4">4 weeks</option><option value="5">5 weeks</option></select>').prependTo('#calendar .fc-left')
    .on('change', function() {
    		refreshCalendarDependingUponWeeks($(this).val());
    });
    
    // add label to above drawn dropdown
    $('<label class="fc-scope">Scope:</label>').prependTo('#calendar .fc-left');
    displayScope=false;
    }
}

$(function () {
	GetUsers();
	load_tasks();
	
	$('#searchBtn').click(function(){
		if ($('#keyword_type').val()!="") {
			load_tasks();
		}else{
			$('#keyword_type').focus();
		}
	});
  });
function refreshCalendarDependingUponWeeks(week){
	var weekVal=parseInt(week);
   
    switch (weekVal) {
        case 1:
            $('#calendar').fullCalendar('changeView', 'agendaToDisplayOneWeek');
            break;
    	case 2:
            $('#calendar').fullCalendar('changeView', 'agendaToDisplayTwoWeek');
            break;
    	case 3:
            $('#calendar').fullCalendar('changeView', 'agendaToDisplayThreeWeek');
            break;
    	case 4:
            $('#calendar').fullCalendar('changeView', 'agendaToDisplayFourWeek');
            break;
        case 5:
            $('#calendar').fullCalendar('changeView', 'agendaToDisplayFiveWeek');
            break;
            
    } 
}
function load_tasks(){
	var keyword=$("#search").val();
	
		var jsonRow=backendDirectory+"/api_fetch_list?start=0&limit=100&collection=tasks&s="+keyword;
		
		$.getJSON(jsonRow,function(html){
			var contentHtml="";
			if(html.aaData.length>0){
					$.each(html.aaData, function(i,row){
						contentHtml+="<tr id='tr|"+row._id+"' class='tableTr'><td>"+row.name+"</td>";
						contentHtml+="<td id='td|"+row._id+"'>"+row.reported_by+"</td>";
						contentHtml+="<td id='td|"+row._id+"' class='est_hours'>"+row.task_estimated_hours+"</td>";
						contentHtml+="</tr>";
					});
     		}
			$("#tasks_table_body").html(contentHtml);
			ini_events($('.tableTr'));
		});
}

function send_request(){
	var dataString = 'collection=tasks&fieldName=name&fieldValue=abcv&action=update&name=abcv&reported_by=yyy&project=yxy&assigned_to=ooo&description=this is  for testing puropose&end_date=dateee&start_date=datess&due_date=datexx&estimated_hours=4&rate=15&Status=1&Created=avc';
	
	$.ajax({
		type: "POST",
		url: "<%= backendDirectory %>/api_crud_post",
		data: dataString,
		dataType: 'json',
		cache: false,
		success: function(html){
			if(html.success){
				alert(html.success);
			} else if(html.error){
				alert(html.error);
			}
		}
	});
}
</script>
</body>
</html>